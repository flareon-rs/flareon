[package]
name = "cot"
version = "0.1.0"
edition.workspace = true
license.workspace = true
description = "Modern web framework focused on speed and ease of use."
rust-version = "1.84"

[lints]
workspace = true

[dependencies]
async-trait.workspace = true
axum = { workspace = true, features = ["http1", "tokio"] }
backtrace.workspace = true
bytes.workspace = true
chrono.workspace = true
clap.workspace = true
derive_builder.workspace = true
derive_more = { workspace = true, features = ["debug", "deref", "display", "from"] }
fake = { workspace = true, optional = true, features = ["derive", "chrono"] }
cot_macros.workspace = true
form_urlencoded.workspace = true
futures-core.workspace = true
futures-util.workspace = true
hmac.workspace = true
http-body-util.workspace = true
http-body.workspace = true
http.workspace = true
humansize.workspace = true
indexmap.workspace = true
mime_guess.workspace = true
password-auth = { workspace = true, features = ["std", "argon2"] }
pin-project-lite.workspace = true
rinja.workspace = true
sea-query = { workspace = true }
sea-query-binder = { workspace = true, features = ["with-chrono", "runtime-tokio"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, optional = true }
sha2.workspace = true
sqlx = { workspace = true, features = ["runtime-tokio", "chrono"] }
subtle = { workspace = true, features = ["std"] }
sync_wrapper.workspace = true
thiserror.workspace = true
time.workspace = true
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
toml = { workspace = true, features = ["parse"] }
tower = { workspace = true, features = ["util"] }
tower-livereload = { workspace = true, optional = true }
tower-sessions = { workspace = true, features = ["memory-store"] }
tracing.workspace = true
url = { workspace = true, features = ["serde"], optional = true }

[dev-dependencies]
async-stream.workspace = true
fake.workspace = true
futures.workspace = true
mockall.workspace = true
tempfile.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cargo-machete]
ignored = [
    # rinja doesn't seem to be working with minimal versions of its dependencies at the moment,
    # so we're manually setting the required versions in the main crate.
    "humansize",
    # time requires version 0.3.35 to work with the latest versions of Rust, but we don't use it directly
    "time",
]

[features]
default = ["sqlite", "postgres", "mysql", "json"]
full = ["default", "fake", "live-reload"]
fake = ["dep:fake"]
db = ["dep:url"]
sqlite = ["db", "sea-query/backend-sqlite", "sea-query-binder/sqlx-sqlite", "sqlx/sqlite"]
postgres = ["db", "sea-query/backend-postgres", "sea-query-binder/sqlx-postgres", "sqlx/postgres"]
mysql = ["db", "sea-query/backend-mysql", "sea-query-binder/sqlx-mysql", "sqlx/mysql"]
json = ["serde_json"]
live-reload = ["dep:tower-livereload"]
